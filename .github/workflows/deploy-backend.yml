name: Deploy Backend to Azure Web App

on:
  push:
    branches: [dev]
    paths:
      - '**'
      - '!frontend/**'
  workflow_dispatch:

env:
  BUILD_NODE_VERSION: '22.x'  # For build process
  RUNTIME_NODE_VERSION: '22-lts'  # For Azure Web App runtime
  AZURE_WEBAPP_NAME: 'navi-backend'
  NODE_ENV: 'production'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.BUILD_NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: 'package-lock.json'
    
    - name: Install dependencies
      run: npm ci
      env:
        NODE_ENV: development
    
    - name: Build (if needed)
      run: npm run build --if-present
    
    - name: Install production dependencies
      run: npm ci --only=production
      env:
        NODE_ENV: production
    
    - name: Create production .env
      run: |
        cat > .env << 'EOL'
        NODE_ENV=production
        # Azure App Service uses port 8080, which is correctly configured here.
        PORT=8080
        MONGODB_URI=${{ secrets.MONGODB_URI }}
        JWT_SECRET=${{ secrets.JWT_SECRET }}
        JWT_EXPIRE=30d
        JWT_COOKIE_EXPIRE=30
        EOL
    
    # Login to Azure with service principal
    - name: 'Login to Azure'
      uses: azure/login@v1
      with:
        creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}","subscriptionId":"0b39938f-1439-4596-9e1c-f82b58ebd47e"}'

    # Create Azure resources
    - name: 'Create Azure Resources'
      uses: azure/CLI@v1
      with:
        inlineScript: |
          echo "Current active subscription:"
          az account show --output table
          
          if ! az appservice plan show --name navi-plan --resource-group nav_hosting --query "name" -o tsv; then
            echo "Creating App Service Plan..."
            az appservice plan create \
              --name navi-plan \
              --resource-group nav_hosting \
              --location eastasia \
              --sku B1 \
              --is-linux
          fi
          
          if ! az webapp show --name ${{ env.AZURE_WEBAPP_NAME }} --resource-group nav_hosting --query "name" -o tsv; then
            echo "Creating Azure Web App..."
            az webapp create \
              --name ${{ env.AZURE_WEBAPP_NAME }} \
              --resource-group nav_hosting \
              --runtime "NODE|${{ env.RUNTIME_NODE_VERSION }}" \
              --plan "navi-plan"
          else
            echo "Web App already exists, skipping creation."
          fi

    - name: 'Reset Deployment'
      uses: azure/CLI@v1
      with:
        inlineScript: |
          echo "Stopping web app and resetting deployment..."
          # Stop the web app
          az webapp stop --name ${{ env.AZURE_WEBAPP_NAME }} --resource-group nav_hosting
          
          # Reset the web app configuration
          echo "Resetting web app configuration..."
          az webapp config appsettings set \
            --name ${{ env.AZURE_WEBAPP_NAME }} \
            --resource-group nav_hosting \
            --settings \
              "SCM_SCRIPT_GENERATOR_ARGS=--node" \
              "PORT=3000" \
              "WEBSITES_PORT=3000" \
              "WEBSITES_CONTAINER_START_TIME_LIMIT=1800" \
              "WEBSITES_ENABLE_APP_SERVICE_STORAGE=true"
          
          # Set the startup command explicitly
          az webapp config set \
            --name ${{ env.AZURE_WEBAPP_NAME }} \
            --resource-group nav_hosting \
            --startup-file "bash startup.sh"
          
          # Wait for operations to complete
          sleep 10
          
    - name: 'Deploy to Azure Web App'
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        slot-name: 'Production'
        package: .
        
    - name: 'Configure Web App'
      uses: azure/CLI@v1
      with:
        inlineScript: |
          echo "Stopping web app..."
          az webapp stop --name ${{ env.AZURE_WEBAPP_NAME }} --resource-group nav_hosting
          
          echo "Updating app settings..."
          az webapp config appsettings set --resource-group nav_hosting --name ${{ env.AZURE_WEBAPP_NAME }} \
            --settings \
              "SCM_SCRIPT_GENERATOR_ARGS=--node" \
              "PORT=3000" \
              "WEBSITES_PORT=3000"
          
          echo "Updating webapp config..."
          az webapp config set --resource-group nav_hosting --name ${{ env.AZURE_WEBAPP_NAME }} \
            --linux-fx-version "NODE|22-lts" \
            --startup-file "bash startup.sh"
          
          echo "Starting web app..."
          az webapp start --name ${{ env.AZURE_WEBAPP_NAME }} --resource-group nav_hosting
        enable-sync: true
    
    - name: Verify deployment
      run: |
        echo "Backend deployment to Azure Web App completed successfully!"
        echo "API URL: https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net"
